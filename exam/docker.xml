<?xml version='1.1' encoding='UTF-8'?>
<flow-definition plugin="workflow-job@1284.v2fe8ed4573d4">
  <actions>
    <org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobAction plugin="pipeline-model-definition@2.2123.va_31cb_3b_80ef8"/>
    <org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobPropertyTrackerAction plugin="pipeline-model-definition@2.2123.va_31cb_3b_80ef8">
      <jobProperties/>
      <triggers/>
      <parameters/>
      <options/>
    </org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobPropertyTrackerAction>
  </actions>
  <description></description>
  <keepDependencies>false</keepDependencies>
  <properties>
    <com.coravy.hudson.plugins.github.GithubProjectProperty plugin="github@1.37.0">
      <projectUrl>http://192.168.99.102:3000/exam/exam/</projectUrl>
      <displayName></displayName>
    </com.coravy.hudson.plugins.github.GithubProjectProperty>
    <org.jenkinsci.plugins.workflow.job.properties.PipelineTriggersJobProperty>
      <triggers>
        <com.cloudbees.jenkins.GitHubPushTrigger plugin="github@1.37.0">
          <spec></spec>
        </com.cloudbees.jenkins.GitHubPushTrigger>
        <hudson.triggers.SCMTrigger>
          <spec></spec>
          <ignorePostCommitHooks>false</ignorePostCommitHooks>
        </hudson.triggers.SCMTrigger>
      </triggers>
    </org.jenkinsci.plugins.workflow.job.properties.PipelineTriggersJobProperty>
  </properties>
  <definition class="org.jenkinsci.plugins.workflow.cps.CpsFlowDefinition" plugin="workflow-cps@3641.vf58904a_b_b_5d8">
    <script>pipeline
{
    agent
    {
        label &apos;docker-node&apos;
    }
    environment
    {
        DOCKERHUB_CREDENTIALS=credentials(&apos;docker-hub&apos;)
    }
    stages
    {
        stage(&apos;Clone&apos;)
        {
            steps
            {
                git branch: &apos;main&apos;, url: &apos;http://192.168.99.102:3000/exam/exam&apos;
            }  
        }
        stage(&apos;Create a network&apos;)
        {
            steps
            {
                sh &apos;&apos;&apos;
                docker network rm app-net || true
                docker network ls | grep app-net || docker network create app-net
                &apos;&apos;&apos;
            }
        }
        stage(&apos;Build the Images&apos;)
        {
            steps
            {
                sh &apos;docker image rm -f pipeline-dob-producer pipeline-dob-storage pipeline-dob-consumer || true&apos;
                sh &apos;docker compose -f docker-compose-run.yml build&apos;
            }
        }
        stage(&apos;Run the Containers&apos;)
        {
            steps
            {
                sh &apos;docker container rm -f dob-producer dob-storage dob-consumer || true&apos;
                sh &apos;docker container rm -f pipeline-exam-producer-1 pipeline-exam-storage-1 pipeline-exam-consumer-1  || true&apos;
                sh &apos;docker compose -f docker-compose-run.yml up -d&apos;
            }
        }
        stage(&apos;CleanUp&apos;)
        {
            steps
            {
                sh &apos;docker container rm -f pipeline-exam-producer-1 pipeline-exam-storage-1 pipeline-exam-consumer-1 || true&apos;
            }
        }
        stage(&apos;Login&apos;)
        {
            steps
            {
                sh &apos;echo $DOCKERHUB_CREDENTIALS_PSW | docker login -u $DOCKERHUB_CREDENTIALS_USR --password-stdin&apos;
            }
        }
        stage(&apos;Push&apos;)
        {
            steps
            {
                sh &apos;docker image rm ilkothetiger/exam-producer ilkothetiger/exam-storage ilkothetiger/exam-consumer || true&apos;
                sh &apos;docker image tag docker-producer ilkothetiger/exam-producer&apos;
                sh &apos;docker image tag docker-storage ilkothetiger/exam-storage&apos;
                sh &apos;docker image tag docker-consumer ilkothetiger/exam-consumer&apos;
                sh &apos;docker push ilkothetiger/exam-producer&apos;
                sh &apos;docker push ilkothetiger/exam-storage&apos;
                sh &apos;docker push ilkothetiger/exam-consumer&apos;
            }
        }
        stage(&apos;Deploy&apos;)
        {
            steps
            {
                sh &apos;docker image rm -f docker-producer-1 docker-storage-1 docker-consumer-1 || true&apos;
                sh &apos;docker compose -f docker-compose-deploy.yml up -d&apos;
            }
        }
    }
}</script>
    <sandbox>true</sandbox>
  </definition>
  <triggers/>
  <disabled>false</disabled>
</flow-definition>